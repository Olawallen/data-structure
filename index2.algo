function dot_product(v1, v2)
    ps = 0
    for i = 1 to length(v1) do
        ps = ps + v1[i] * v2[i]
    return ps

algorithm check_orthogonal_using_function
    n = number of vector pairs
    for i = 1 to n do
        read v1, v2 from input
        ps = dot_product(v1, v2)
        if ps = 0 then
            print "Vectors are orthogonal"
        else
            print "Vectors are not orthogonal"
In the above pseudocode-like algorithms:

dot_product is defined either as a procedure or a function, taking two vectors v1 and v2, and in the case of the procedure, also taking a variable ps to store the dot product.

check_orthogonal_using_procedure and check_orthogonal_using_function are the main algorithms that read input vectors and calculate their dot products using the respective approach (procedure or function). If the dot product is zero, the vectors are considered orthogonal, and if it's not zero, they are not orthogonal.

Please note that this is a pseudocode-like representation, so you might need to adapt it to the specific programming language you're using.